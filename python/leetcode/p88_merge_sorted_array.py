from typing import List
from unittest import TestCase


class TestSolution(TestCase):
    def test_unique_paths(self):
        solution = Solution()
        self.assertEqual([1,2,2,3,5,6], solution.merge([1,2,3,0,0,0], 3, [2,5,6], 3))
        self.assertEqual([1], solution.merge([1], 1, [], 0))
        self.assertEqual([1], solution.merge([0], 0, [1], 1))
        self.assertEqual([-10,-10,-10,-10,-9,-9,-9,-9,-9,-9,-9,-8,-8,-8,-8,-8,-8,-8,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-7,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-6,-5,-5,-5,-5,-5,-5,-5,-5,-4,-4,-4,-4,-4,-4,-4,-4,-3,-3,-3,-3,-3,-2,-2,-2,-2,-2,-2,-2,-2,-2,-1,-1,-1,-1,-1,0,0,0,0,0,0,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,9,9,9,9,9,9,9,9],
                         solution.merge([-10,-10,-9,-9,-9,-8,-8,-7,-7,-7,-6,-6,-6,-6,-6,-6,-6,-5,-5,-5,-4,-4,-4,-3,-3,-2,-2,-1,-1,0,1,1,1,2,2,2,3,3,3,4,5,5,6,6,6,6,7,7,7,7,8,9,9,9,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], 55,
                                        [-10,-10,-9,-9,-9,-9,-8,-8,-8,-8,-8,-7,-7,-7,-7,-7,-7,-7,-7,-6,-6,-6,-6,-5,-5,-5,-5,-5,-4,-4,-4,-4,-4,-3,-3,-3,-2,-2,-2,-2,-2,-2,-2,-1,-1,-1,0,0,0,0,0,1,1,1,2,2,2,2,2,2,2,2,3,3,3,3,4,4,4,4,4,4,4,5,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,8,8,8,8,9,9,9,9], 99))


class Solution:
    def merge(self, nums1: List[int], m: int, nums2: List[int], n: int) -> None:

        ptr = m + n - 1

        nums1_ptr = m - 1
        nums2_ptr = n - 1

        while ptr >= 0 and nums2_ptr >= 0:

            if nums1_ptr >= 0 and nums2[nums2_ptr] <= nums1[nums1_ptr]:
                nums1[ptr] = nums1[nums1_ptr]
                nums1_ptr -= 1

            else:
                nums1[ptr] = nums2[nums2_ptr]
                nums2_ptr -= 1

            ptr -= 1


        """
        Do not return anything, modify nums1 in-place instead.
        """
        # This is easier for unit testing
        return nums1